import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import dynamic from 'next/dynamic'
import { Card, CardContent, Container, Table, TableCell, TableRow, TableHead, Typography, Button } from '@mui/material';
import { useEffect, useState } from 'react';
import axios from 'axios';
import { baseUrl } from '../helpers/strings';

export default function Home() {
  const Map = dynamic(() => import("../components/map"), { ssr: false });
  const [daySchedule, setDaySchedule] = useState([])

  const [mapDataA, setMapDataA] = useState()
  const [mapDataB, setMapDataB] = useState()
  const [mapDataC, setMapDataC] = useState()
  useEffect(() => {
    let d= new Date().getDay()
    console.log(d);
    //const day = getDay(parseIso(Date()))
    axios.get(`${baseUrl}/schedule/day/?d=${d}`).then((res) => {
      //console.log(res.data);
      setDaySchedule(res.data)
    }).catch(err => {
      //console.log(err);
      alert("Error while loading day schedule")
    })
    axios.get(`${baseUrl}/all/schedule`).then((res) => {
      setMapDataA(res.data.features.filter(ft => ft.properties.group === 'A'))
      setMapDataB( res.data.features.filter(ft => ft.properties.group === 'B'))
      setMapDataC(res.data.features.filter(ft => ft.properties.group === 'C'))
    }).catch(err => {
      alert("error during map loading")
      console.log(err);
    })
  }, [])

  return (
    <div className={styles.container}>
      <Head>
        <title>Black Out Check</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container sx={{
        px: 1,
        display: 'flex',
        flexDirection: 'column',
        gap: 2
      }}>
        <Card sx={{}}>
          <CardContent>
            <Typography variant='h6'>Today's Schedule</Typography>
            <Table>
              <TableHead>
                <TableCell>Group</TableCell>
                <TableCell>Period</TableCell>
                <TableCell>Duration</TableCell>
              </TableHead>
              {
                daySchedule.map((daysch, index) => {
                  return (
                    <TableRow key={index}>
                      <TableCell>{daysch.name}</TableCell>
                      <TableCell>{daysch.period}</TableCell>
                      <TableCell>{daysch.duration}</TableCell>
                    </TableRow>
                  )
                })
              }
            </Table>
          </CardContent>
        </Card>
        <Map groupA={mapDataA} groupB={mapDataB} groupC={mapDataC} />
      </Container>




      <footer className={styles.footer}>

      </footer>
    </div>
  )
}
